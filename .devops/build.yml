name: $(Build.BuildId)

variables:
  AppVersion: '1.0.[yyyyWW].*'
  TestFilter: '82100..82150'

steps:
- task: NAVMgtDockerStart@1
  inputs:
    docker_image: $(bc.dockerimage)
    docker_pull: true
    docker_login: 'Insider Docker Registry'

- task: NAVMgtDockerWait@1
  inputs:
    search_string: 'Ready for connections!'

- task: NAVMgtLicenseImport@1
  displayName: 'ALOPS License Import'
  inputs:
    usedocker: true
    license_path: $(bc.license)
    
- task: NAVMgtAppCompiler@2
  displayName: 'Compile Extension'
  inputs:
    usedocker: true
    nav_app_version: $(AppVersion)
    failed_on_warnings: true    

- task: NAVMgtAppPublish@2
  displayName: 'Publish AL-App'
  inputs:
    usedocker: true
    nav_artifact_app_filter: '*.app'   
    skip_verification: true 

- task: NAVMgtAppTest@1
  displayName: 'Run TestSuite'
  inputs:
    usedocker: true
    import_action: "Skip"
    testfilter: $(TestFilter)
    show_available_tests: true
  continueOnError: true    

- task: PublishTestResults@2
  displayName: 'Publish Test Results **/TestResults.xml'
  inputs:
    testResultsFormat: XUnit
    testResultsFiles: '**/TestResults.xml'
    testRunTitle: 'BC Test Results: $(Build.BuildId)'

- task: NAVMgtDockerRemove@1
  displayName: 'Remove Docker Container'
  enabled: true
  condition: always()
  inputs:
    docker_login: 'Insider Docker Registry'

- task: PublishBuildArtifacts@1
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Base'
    publishLocation: 'Container'